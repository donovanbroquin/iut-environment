# --------------------------------------------------------------------
# Build stage: install Composer dependencies
# --------------------------------------------------------------------
FROM php:8.4.3-cli-bookworm AS composer

WORKDIR /app

COPY . .

COPY --from=composer:2.8.5 /usr/bin/composer /usr/bin/composer

# Install system dependencies
RUN apt update -y && \
    apt install -y \
    zlib1g-dev \
    libpng-dev \
    libxml2-dev \
    libxslt-dev \
    libzip-dev \
    libonig-dev \
    libpq-dev \
    zip

# Install PHP extensions
RUN pecl install redis && \
    docker-php-ext-install -j$(nproc) mbstring exif pcntl bcmath gd zip && \
    docker-php-ext-enable redis

RUN composer install

# --------------------------------------------------------------------
# Final stage: build the definitive image
# --------------------------------------------------------------------
FROM php:8.4.2-cli-bookworm

# Change default path
WORKDIR /app

# Install system dependencies
RUN apt update -y && \
    apt install -y \
    zlib1g-dev \
    libpng-dev \
    libxml2-dev \
    libxslt-dev \
    libzip-dev \
    libonig-dev \
    libpq-dev \
    zip \
    cron

# Install PHP extensions
RUN pecl install redis && \
    docker-php-ext-install -j$(nproc) mbstring exif pcntl bcmath gd zip && \
    docker-php-ext-enable redis

# Create app user and group
RUN groupadd -r app && \
    useradd -r -g app -d /app -s /bin/bash app && \
    chown -R app:app /app

# Enable Tinker
RUN mkdir -p /config/psysh && \
    chown -R app:app /config/psysh

# Copy the app code
COPY . .

# Copy the vendor directory
COPY --chown=www-data --from=composer /app/vendor /app/vendor

# Add scheduler CRON 
RUN echo '* * * * * /usr/local/bin/php /app/artisan schedule:run --no-interaction --quiet >> /var/log/scheduler/scheduler.log 2>&1' >> /etc/cron.d/app-cron && \
    mkdir -p /var/log/scheduler /var/log/app && \
    touch /var/log/scheduler/scheduler.log && \
    chown -R app:app /var/log/scheduler /var/log/app && \
    crontab -u app /etc/cron.d/app-cron && \
    chmod u+s /usr/sbin/cron

# Switch to the non-root user for application code execution
USER app

# Run cron
CMD ["sh", "-c", "cron && tail -f /var/log/scheduler/scheduler.log"]
